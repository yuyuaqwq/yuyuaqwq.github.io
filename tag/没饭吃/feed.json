{
    "version": "https://jsonfeed.org/version/1",
    "title": "鹿鹿鱼鱼 • All posts by \"没饭吃\" tag",
    "description": "人为什么要起床？",
    "home_page_url": "http://yuyuaqwq.github.io",
    "items": [
        {
            "id": "http://yuyuaqwq.github.io/posts/7c79.html",
            "url": "http://yuyuaqwq.github.io/posts/7c79.html",
            "title": "【MFC】初识MFC",
            "date_published": "2022-10-04T11:33:52.000Z",
            "content_html": "<h1 id=\"mfc简述\"><a class=\"markdownIt-Anchor\" href=\"#mfc简述\">#</a> MFC 简述</h1>\n<p><strong>MFC (Microsoft Foundation Classes)，微软基础类库；</strong><br>\n是微软使用 <code>C++</code>  的特性，在 <code>Win32API</code>  基础上再次进行的封装。</p>\n<hr>\n<h1 id=\"mfc基本使用\"><a class=\"markdownIt-Anchor\" href=\"#mfc基本使用\">#</a> MFC 基本使用</h1>\n<p>MFC 只是一个 C++ 类库，我们只需要对 C++ 有一定了解，就能够理解 MFC 的工作机制。<br>\n而微软的宇宙第一 IDE <code>Visual Studio</code>  本身也替我们做好了许多工作，这里以 vs2022 为例，对 MFC 的安装与使用进行简单的说明。</p>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<ol>\n<li>运行 <code>Visual Studio Installer</code>\n<ul>\n<li>\n<img src=\"/posts/7c79/1.png\" class=\"\" title=\"这是一张图片\">\n</li>\n</ul>\n</li>\n<li>点击 <code>修改</code></li>\n<li>选择 <code>单个组件</code> 选项卡</li>\n<li>搜索 <code>MFC</code> ，勾选需要的组件\n<ul>\n<li>\n<img src=\"/posts/7c79/2.png\" class=\"\" title=\"这是一张图片\">\n</li>\n</ul>\n</li>\n<li>点击 <code>修改</code> ，等待完成即可\n<ul>\n<li>我这里已经装过了，就不重新做演示了</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"新建项目\"><a class=\"markdownIt-Anchor\" href=\"#新建项目\">#</a> 新建项目</h2>\n<ol>\n<li>运行 <code>Visual Studio 2022</code></li>\n<li>点击 <code>创建新项目</code></li>\n<li>选择 <code>空项目</code></li>\n<li>项目名称随意，我这里写 <code>MFCTestProject</code></li>\n</ol>\n<h2 id=\"配置项目\"><a class=\"markdownIt-Anchor\" href=\"#配置项目\">#</a> 配置项目</h2>\n<p>由于是空项目，什么都没有，我们需要自行做一些必要的设置。</p>\n<ol>\n<li>右键 <code>MFCTestProject</code>  项目，选择 <code>属性</code></li>\n<li><code>属性页</code> 中选择 <code>高级</code> 选项卡</li>\n<li><code>MFC的使用</code> 选项，修改为 <code>在静态库中使用MFC</code>  或 <code>在共享DLL中使用MFC</code>\n<ul>\n<li>我这里选择 <code>在共享DLL中使用MFC</code></li>\n</ul>\n</li>\n<li><code>属性页</code> 中展开 <code>链接器</code> ，选择 <code>系统</code> 选项卡</li>\n<li><code>子系统</code> 选择 <code>窗口(/SUBSYSTEM:WINDOWS)</code></li>\n</ol>\n<h2 id=\"编写源代码\"><a class=\"markdownIt-Anchor\" href=\"#编写源代码\">#</a> 编写源代码</h2>\n<ol>\n<li>新建 <code>.cpp</code>  文件，文件名随意</li>\n<li>编写如下示例代码 <details class=\"folding-tag\" blue><summary> 示例 </summary>\n              <div class='content'>\n              <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;afxwin.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CMyFrameWnd</span> :<span class=\"keyword\">public</span> CFrameWnd &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CMyWinApp</span> :<span class=\"keyword\">public</span> CWinApp &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">CMyWinApp</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">virtual</span> BOOL <span class=\"title\">InitInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        CMyFrameWnd* frame = <span class=\"keyword\">new</span> CMyFrameWnd;</span><br><span class=\"line\">        frame-&gt;<span class=\"built_in\">Create</span>(<span class=\"literal\">nullptr</span>, <span class=\"string\">L&quot;MFCBase&quot;</span>);</span><br><span class=\"line\">        m_pMainWnd = frame;</span><br><span class=\"line\">        frame-&gt;<span class=\"built_in\">ShowWindow</span>(SW_SHOW);</span><br><span class=\"line\">        frame-&gt;<span class=\"built_in\">UpdateWindow</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">CMyWinApp g_theApp;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n</li>\n<li>F5 运行，编译运行正常会出现这样的窗口\n<ul>\n<li>\n<img src=\"/posts/7c79/3.png\" class=\"\" title=\"这是一张图片\">\n</li>\n</ul>\n</li>\n</ol>\n<p>至此，我们就已经建立了一个非常简单的 MFC 程序，并且它还能够运行。</p>\n<p>当然，这些代码也许会使你感到困惑，毕竟代码中甚至找不到你最熟悉的 main、WinMain，为什么它能够跑起来？</p>\n<p>我们将在下篇文章探索 MFC 的程序启动机制。</p>\n<hr>\n",
            "tags": [
                "MFC",
                "没饭吃"
            ]
        },
        {
            "id": "http://yuyuaqwq.github.io/posts/c22c.html",
            "url": "http://yuyuaqwq.github.io/posts/c22c.html",
            "title": "【MFC】探索消息映射机制的实现原理",
            "date_published": "2022-10-04T05:07:21.000Z",
            "content_html": "<h1 id=\"消息机制简述\"><a class=\"markdownIt-Anchor\" href=\"#消息机制简述\">#</a> 消息机制简述</h1>\n<p>我们知道，Windows 的窗口是由<strong>消息</strong>驱动的；<br>\nWindows 通过捕获鼠标、键盘等输入设备产生的动作，再生成对应的消息，并传递给正确的窗口。</p>\n<div class=\"note purple icon-padding simple\"><i class=\"note-icon fas fa-fan\"></i><p>直接基于 <code>Win32API</code>  开发时，我们需要在注册窗口类时指定<strong>窗口过程函数</strong>，以告知 Windows 回调 (传递消息) 的入口。</p>\n</div>\n<hr>\n<h1 id=\"mfc的消息映射\"><a class=\"markdownIt-Anchor\" href=\"#mfc的消息映射\">#</a> MFC 的消息映射</h1>\n<p>而 MFC 为我们提供了一种更为方便的机制，<emp>直接为一个消息与一个函数建立映射关系</emp>，在消息产生时，回调此函数，而不再需要我们去自行分发。</p>\n<details class=\"folding-tag\" blue><summary> 消息映射示例 </summary>\n              <div class='content'>\n              <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;afxwin.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CMyFrameWnd</span> : <span class=\"keyword\">public</span> CFrameWnd &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">DECLARE_MESSAGE_MAP</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\">LRESULT <span class=\"title\">OnCreate</span><span class=\"params\">(WPARAM wParam, LPARAM lParam)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">AfxMessageBox</span>(<span class=\"string\">L&quot;Window Create!&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">BEGIN_MESSAGE_MAP</span>(CMyFrameWnd, CFrameWnd)</span><br><span class=\"line\">\t<span class=\"built_in\">ON_MESSAGE</span>(WM_CREATE, OnCreate)   <span class=\"comment\">// 将WM_CREATE与CMyFrameWnd类的成员函数OnCreate建立映射</span></span><br><span class=\"line\"><span class=\"built_in\">END_MESSAGE_MAP</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CMyWinApp</span> : <span class=\"keyword\">public</span> CWinApp &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">CMyWinApp</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> BOOL <span class=\"title\">InitInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tCMyFrameWnd* frame = <span class=\"keyword\">new</span> CMyFrameWnd;</span><br><span class=\"line\">\t\tframe-&gt;<span class=\"built_in\">Create</span>(<span class=\"literal\">nullptr</span>, <span class=\"string\">L&quot;MFCBase&quot;</span>);</span><br><span class=\"line\">\t\tm_pMainWnd = frame;</span><br><span class=\"line\">\t\tframe-&gt;<span class=\"built_in\">ShowWindow</span>(SW_SHOW);</span><br><span class=\"line\">\t\tframe-&gt;<span class=\"built_in\">UpdateWindow</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">CMyWinApp g_theApp;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n<h2 id=\"消息映射宏\"><a class=\"markdownIt-Anchor\" href=\"#消息映射宏\">#</a> 消息映射宏</h2>\n<p>MFC 的消息映射是通过几个<strong>宏函数</strong>来实现的，我们以上述代码为例，将宏展开，一探究竟。</p>\n<ul>\n<li>\n<p>声明宏<br>\n MFC 的声明宏，就是在窗口类中声明两个受保护的成员函数。</p>\n  <details class=\"folding-tag\" blue><summary> ECLARE_MESSAGE_MAP() </summary>\n              <div class='content'>\n              <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">const</span> AFX_MSGMAP* PASCAL <span class=\"title\">GetThisMessageMap</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">const</span> AFX_MSGMAP* <span class=\"title\">GetMessageMap</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n</li>\n<li>\n<p>定义宏<br>\n定义则稍显复杂，由多个宏函数组成，实际上是在实现声明宏声明的成员函数。</p>\n  <details class=\"folding-tag\" blue><summary> BEGIN_MESSAGE_MAP() </summary>\n              <div class='content'>\n              <p><code>BEGIN_MESSAGE_MAP(CMyFrameWnd, CFrameWnd)</code></p><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">PTM_WARNING_DISABLE</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">const</span> AFX_MSGMAP* <span class=\"title\">CMyFrameWnd::GetMessageMap</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">GetThisMessageMap</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">const</span> AFX_MSGMAP* PASCAL <span class=\"title\">CMyFrameWnd::GetThisMessageMap</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">typedef</span> CMyFrameWnd ThisClass;</span><br><span class=\"line\">\t<span class=\"keyword\">typedef</span> CFrameWnd TheBaseClass;</span><br><span class=\"line\">\t__pragma(<span class=\"built_in\">warning</span>(push))</span><br><span class=\"line\">\t__pragma(<span class=\"built_in\">warning</span>(disable: <span class=\"number\">4640</span>))</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">const</span> AFX_MSGMAP_ENTRY _messageEntries[] =</span><br><span class=\"line\">\t&#123;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n  <details class=\"folding-tag\" blue><summary> ON_MESSAGE() </summary>\n              <div class='content'>\n              <p><code>ON_MESSAGE(WM_CREATE, OnCreate)</code></p><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 实际上是在为_messageEntries变量的初始化列表添加结构体元素</span></span><br><span class=\"line\">\t\t&#123; WM_CREATE, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, AfxSig_lwl, (AFX_PMSG)(AFX_PMSGW)(<span class=\"built_in\">static_cast</span>&lt;<span class=\"built_in\">LRESULT</span>(AFX_MSG_CALL CWnd::*)(WPARAM, LPARAM)&gt;(OnCreate))&#125;,</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n  <details class=\"folding-tag\" blue><summary> END_MESSAGE_MAP() </summary>\n              <div class='content'>\n              <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#123; <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, AfxSig_end, (AFX_PMSG)<span class=\"number\">0</span> &#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t__pragma(<span class=\"built_in\">warning</span>(pop))</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">const</span> AFX_MSGMAP messageMap =</span><br><span class=\"line\">\t&#123; &amp;TheBaseClass::GetThisMessageMap, &amp;_messageEntries[<span class=\"number\">0</span>] &#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;messageMap;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">PTM_WARNING_RESTORE</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n</li>\n<li>\n<p>整体展开</p>\n<details class=\"folding-tag\" blue><summary> 消息映射示例-宏展开 </summary>\n              <div class='content'>\n              <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;afxwin.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title class_\">CMyFrameWnd</span> :<span class=\"keyword\">public</span> CFrameWnd &#123;</span><br><span class=\"line\">  <span class=\"keyword\">protected</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">const</span> AFX_MSGMAP* PASCAL <span class=\"title\">GetThisMessageMap</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">const</span> AFX_MSGMAP* <span class=\"title\">GetMessageMap</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">LRESULT <span class=\"title\">OnCreate</span><span class=\"params\">(WPARAM wParam, LPARAM lParam)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">AfxMessageBox</span>(<span class=\"string\">L&quot;Window Create!&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">PTM_WARNING_DISABLE</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"type\">const</span> AFX_MSGMAP* <span class=\"title\">CMyFrameWnd::GetMessageMap</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">GetThisMessageMap</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">const</span> AFX_MSGMAP* PASCAL <span class=\"title\">CMyFrameWnd::GetThisMessageMap</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typedef</span> CMyFrameWnd ThisClass;</span><br><span class=\"line\">    <span class=\"keyword\">typedef</span> CFrameWnd TheBaseClass;</span><br><span class=\"line\">    __pragma(<span class=\"built_in\">warning</span>(push))</span><br><span class=\"line\">    __pragma(<span class=\"built_in\">warning</span>(disable: <span class=\"number\">4640</span>))</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">const</span> AFX_MSGMAP_ENTRY _messageEntries[] =</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &#123; WM_CREATE, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, AfxSig_lwl, (AFX_PMSG)(AFX_PMSGW)(<span class=\"built_in\">static_cast</span>&lt;<span class=\"built_in\">LRESULT</span>(AFX_MSG_CALL CWnd::*)(WPARAM, LPARAM)&gt;(OnCreate))&#125;,</span><br><span class=\"line\">      &#123; <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, AfxSig_end, (AFX_PMSG)<span class=\"number\">0</span> &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    __pragma(<span class=\"built_in\">warning</span>(pop))</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">const</span> AFX_MSGMAP messageMap =</span><br><span class=\"line\">    &#123; &amp;TheBaseClass::GetThisMessageMap, &amp;_messageEntries[<span class=\"number\">0</span>] &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &amp;messageMap;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  PTM_WARNING_RESTORE</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CMyWinApp</span> :<span class=\"keyword\">public</span> CWinApp &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">CMyWinApp</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> BOOL <span class=\"title\">InitInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tCMyFrameWnd* frame = <span class=\"keyword\">new</span> CMyFrameWnd;</span><br><span class=\"line\">\t\tframe-&gt;<span class=\"built_in\">Create</span>(<span class=\"literal\">nullptr</span>, <span class=\"string\">L&quot;MFCBase&quot;</span>);</span><br><span class=\"line\">\t\tm_pMainWnd = frame;</span><br><span class=\"line\">\t\tframe-&gt;<span class=\"built_in\">ShowWindow</span>(SW_SHOW);</span><br><span class=\"line\">\t\tframe-&gt;<span class=\"built_in\">UpdateWindow</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">CMyWinApp g_theApp;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n</li>\n</ul>\n<div class=\"note purple icon-padding simple\"><i class=\"note-icon fas fa-fan\"></i><p>通过宏添加消息映射时，实际上是重写了 <code>CFrameWnd</code>  类的 <code>GetMessageMap</code>  函数；<br>\n而 <code>GetMessageMap</code>  函数初始化了一个名为 <code>_messageEntries</code>  和 <code>messageMap</code>  的<strong>静态局部变量</strong>，并将该变量的地址返回。<br>\n我们简单猜测， <code>CFrameWnd</code>  类内部在调用 <code>GetMessageMap</code>  函数时，就得到了我们所设定的<strong>映射关系表</strong>；<br>\n基于此映射表，就可以在其<strong>窗口过程函数</strong>中，<emp>根据消息调用对应的成员函数</emp>。</p>\n</div>\n<hr>\n",
            "tags": [
                "MFC",
                "没饭吃"
            ]
        }
    ]
}